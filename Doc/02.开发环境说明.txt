【5】编译和调试方法
 		【备注1】选择在CPU RAM运行时，不能使用Load按钮下载程序，请直接Start Debug即可。因为Load按钮是专门用于下载到Flash的。
 		【备注2】对于Keil MDK，为了避免中文字符串告警，需要在C/C++编译选项中增加 --diag_suppress=870 参数。
		【备注3】为了提高编译效率。缺省关闭了工程设置 Output - Browse Information。因此无法使用鼠标右键查找函数定义。
				  如果需要这个功能，请打开这个选项开关。

【6】文件夹说明
├─Libraries :  存放第3方提供的库或其源代码，这些代码一般是成熟的并经过验证的代码。
│  ├─CMSIS :  CMSIS是ARM公司与多家不同的芯片和软件供应商一起紧密合作定义的，提供了内核与外设、实时操作系统和中间设备之间的通用接口。
│  ├─STM32F10x_StdPeriph_Driver : STM32F10X系列MCU的标准固件库源代码
│  └─STM32_USB-FS-Device_Driver : USB Device Library
│
├─User      :  这里存放用户自己编写的源代码
│  ├─bsp    :  板级支持包（Board Surport Packet），也就是硬件底层驱动程序. 该层介于固件库和应用程序之间。
│  └─fonts  :  存放点阵字库常量数组
│
└─project   :  这里存放各类开发工具的工程文件，编译过程中的临时文件和最终HEX文件都放在此文件夹
    ├─MDK-ARM(uV) : KEIL公司MDK uVision 工程文件夹
    └─EWARMv6 : IAR公司的EWARM 工程文件夹

【7】工程中源代码分组说明
└─Flash               : Target名称，Flash 或 CpuRAM
   ├─User             : 存放 main.c 以及用户应用程序
   ├─BSP              : 板级支持包（Board Support Packet）,存放硬件底层驱动文件
   ├─CMSIS            : 仅存放CMSISI接口文件 system_stm32f4xx.c
   ├─StdPeriph_Drivers: 存放STM328S系列MCU的固件库源代码
   ├─MDK-ARM          : 启动文件（汇编源程序）,对于IAR是 EWARMv6
   ├─Doc              : 存放一些文档，仅限txt文件
   └─CommPlatform     : 通信平台协议

【8】公共源代码文件说明
	- main.c          : 用户主程序，存放main()函数的文件
	- stm32f1xx_it.c  : 集中存放中断服务程序 【除了几个异常中断外，我们建议其他的ISR放到各自的模块中】
	- stm32f10x_assert.c : 存放断言函数   （一般无需更改）
	- bsp.c           : 底层硬件驱动程序的主程序（包含硬件初始化入口函数）
	- 清除目标文件(用于打包备份).bat : 执行这个程序会删除OBJ,LIST文件，方便对源代码进行压缩打包。

【9】C编译器中的预定义宏 （在工程设置中更改）
	USE_STDPERIPH_DRIVER  - 增加这个符号表示使用ST公司的标准外设库
	VECT_TAB_SRAM         - 增加这个符号表示中断向量表定位在CPU内部RAM （针对在CPU内部RAM运行的工程才需要添加）

【10】调整堆和栈的容量
	对于KEIL MDK, 设置堆和栈的大小是通过修改启动文件start_stm32f10x_hd.s 文件实现的，比如：
		Stack_Size      EQU     0x00008000
		Heap_Size       EQU     0x00000400	

【11】输出目标文件
	在 project 下面，有编译好的 hex 文件，用户可以用仿真器直接下载 output(flash).hex 到CPU内部flash	
	\Project\output(mdk).hex - 采用KEIL MDK编译好的文件，定位在CPU 内部Flash
	\Project\MDK-ARM(uV4)\Flash\List\output.map  - 这是编译链接文件，文本格式，可以查看每个函数、变量的地址和空间分配情况。